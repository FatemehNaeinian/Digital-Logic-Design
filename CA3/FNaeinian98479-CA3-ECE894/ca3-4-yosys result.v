/* Generated by Yosys 0.7 (git sha1 61f6811, i686-w64-mingw32.static-gcc 4.9.3 -Os) */

module adder127taei(a, w);
  input [126:0] a;
  wire [63:0] add1;
  wire [47:0] add2;
  wire [31:0] add3;
  wire [19:0] add4;
  wire [11:0] add5;
  wire [6:0] add6;
  output [6:0] w;
  fadder1 \$genblock$ca3-4.v:55$13[0].Y  (
    .a(a[0]),
    .b(a[1]),
    .ci(a[2]),
    .co(add1[1]),
    .s(add1[0])
  );
  fadder1 \$genblock$ca3-4.v:55$14[1].Y  (
    .a(a[3]),
    .b(a[4]),
    .ci(a[5]),
    .co(add1[3]),
    .s(add1[2])
  );
  fadder1 \$genblock$ca3-4.v:55$15[2].Y  (
    .a(a[6]),
    .b(a[7]),
    .ci(a[8]),
    .co(add1[5]),
    .s(add1[4])
  );
  fadder1 \$genblock$ca3-4.v:55$16[3].Y  (
    .a(a[9]),
    .b(a[10]),
    .ci(a[11]),
    .co(add1[7]),
    .s(add1[6])
  );
  fadder1 \$genblock$ca3-4.v:55$17[4].Y  (
    .a(a[12]),
    .b(a[13]),
    .ci(a[14]),
    .co(add1[9]),
    .s(add1[8])
  );
  fadder1 \$genblock$ca3-4.v:55$18[5].Y  (
    .a(a[15]),
    .b(a[16]),
    .ci(a[17]),
    .co(add1[11]),
    .s(add1[10])
  );
  fadder1 \$genblock$ca3-4.v:55$19[6].Y  (
    .a(a[18]),
    .b(a[19]),
    .ci(a[20]),
    .co(add1[13]),
    .s(add1[12])
  );
  fadder1 \$genblock$ca3-4.v:55$20[7].Y  (
    .a(a[21]),
    .b(a[22]),
    .ci(a[23]),
    .co(add1[15]),
    .s(add1[14])
  );
  fadder1 \$genblock$ca3-4.v:55$21[8].Y  (
    .a(a[24]),
    .b(a[25]),
    .ci(a[26]),
    .co(add1[17]),
    .s(add1[16])
  );
  fadder1 \$genblock$ca3-4.v:55$22[9].Y  (
    .a(a[27]),
    .b(a[28]),
    .ci(a[29]),
    .co(add1[19]),
    .s(add1[18])
  );
  fadder1 \$genblock$ca3-4.v:55$23[10].Y  (
    .a(a[30]),
    .b(a[31]),
    .ci(a[32]),
    .co(add1[21]),
    .s(add1[20])
  );
  fadder1 \$genblock$ca3-4.v:55$24[11].Y  (
    .a(a[33]),
    .b(a[34]),
    .ci(a[35]),
    .co(add1[23]),
    .s(add1[22])
  );
  fadder1 \$genblock$ca3-4.v:55$25[12].Y  (
    .a(a[36]),
    .b(a[37]),
    .ci(a[38]),
    .co(add1[25]),
    .s(add1[24])
  );
  fadder1 \$genblock$ca3-4.v:55$26[13].Y  (
    .a(a[39]),
    .b(a[40]),
    .ci(a[41]),
    .co(add1[27]),
    .s(add1[26])
  );
  fadder1 \$genblock$ca3-4.v:55$27[14].Y  (
    .a(a[42]),
    .b(a[43]),
    .ci(a[44]),
    .co(add1[29]),
    .s(add1[28])
  );
  fadder1 \$genblock$ca3-4.v:55$28[15].Y  (
    .a(a[45]),
    .b(a[46]),
    .ci(a[47]),
    .co(add1[31]),
    .s(add1[30])
  );
  fadder1 \$genblock$ca3-4.v:55$29[16].Y  (
    .a(a[48]),
    .b(a[49]),
    .ci(a[50]),
    .co(add1[33]),
    .s(add1[32])
  );
  fadder1 \$genblock$ca3-4.v:55$30[17].Y  (
    .a(a[51]),
    .b(a[52]),
    .ci(a[53]),
    .co(add1[35]),
    .s(add1[34])
  );
  fadder1 \$genblock$ca3-4.v:55$31[18].Y  (
    .a(a[54]),
    .b(a[55]),
    .ci(a[56]),
    .co(add1[37]),
    .s(add1[36])
  );
  fadder1 \$genblock$ca3-4.v:55$32[19].Y  (
    .a(a[57]),
    .b(a[58]),
    .ci(a[59]),
    .co(add1[39]),
    .s(add1[38])
  );
  fadder1 \$genblock$ca3-4.v:55$33[20].Y  (
    .a(a[60]),
    .b(a[61]),
    .ci(a[62]),
    .co(add1[41]),
    .s(add1[40])
  );
  fadder1 \$genblock$ca3-4.v:55$34[21].Y  (
    .a(a[63]),
    .b(a[64]),
    .ci(a[65]),
    .co(add1[43]),
    .s(add1[42])
  );
  fadder1 \$genblock$ca3-4.v:55$35[22].Y  (
    .a(a[66]),
    .b(a[67]),
    .ci(a[68]),
    .co(add1[45]),
    .s(add1[44])
  );
  fadder1 \$genblock$ca3-4.v:55$36[23].Y  (
    .a(a[69]),
    .b(a[70]),
    .ci(a[71]),
    .co(add1[47]),
    .s(add1[46])
  );
  fadder1 \$genblock$ca3-4.v:55$37[24].Y  (
    .a(a[72]),
    .b(a[73]),
    .ci(a[74]),
    .co(add1[49]),
    .s(add1[48])
  );
  fadder1 \$genblock$ca3-4.v:55$38[25].Y  (
    .a(a[75]),
    .b(a[76]),
    .ci(a[77]),
    .co(add1[51]),
    .s(add1[50])
  );
  fadder1 \$genblock$ca3-4.v:55$39[26].Y  (
    .a(a[78]),
    .b(a[79]),
    .ci(a[80]),
    .co(add1[53]),
    .s(add1[52])
  );
  fadder1 \$genblock$ca3-4.v:55$40[27].Y  (
    .a(a[81]),
    .b(a[82]),
    .ci(a[83]),
    .co(add1[55]),
    .s(add1[54])
  );
  fadder1 \$genblock$ca3-4.v:55$41[28].Y  (
    .a(a[84]),
    .b(a[85]),
    .ci(a[86]),
    .co(add1[57]),
    .s(add1[56])
  );
  fadder1 \$genblock$ca3-4.v:55$42[29].Y  (
    .a(a[87]),
    .b(a[88]),
    .ci(a[89]),
    .co(add1[59]),
    .s(add1[58])
  );
  fadder1 \$genblock$ca3-4.v:55$43[30].Y  (
    .a(a[90]),
    .b(a[91]),
    .ci(a[92]),
    .co(add1[61]),
    .s(add1[60])
  );
  fadder1 \$genblock$ca3-4.v:55$44[31].Y  (
    .a(a[93]),
    .b(a[94]),
    .ci(a[95]),
    .co(add1[63]),
    .s(add1[62])
  );
  fadder2 \$genblock$ca3-4.v:64$45[0].Y  (
    .a({ add1[0], add1[1] }),
    .b({ add1[2], add1[3] }),
    .ci(a[96]),
    .co(add2[2]),
    .s({ add2[0], add2[1] })
  );
  fadder2 \$genblock$ca3-4.v:64$46[1].Y  (
    .a({ add1[4], add1[5] }),
    .b({ add1[6], add1[7] }),
    .ci(a[97]),
    .co(add2[5]),
    .s({ add2[3], add2[4] })
  );
  fadder2 \$genblock$ca3-4.v:64$47[2].Y  (
    .a({ add1[8], add1[9] }),
    .b({ add1[10], add1[11] }),
    .ci(a[98]),
    .co(add2[8]),
    .s({ add2[6], add2[7] })
  );
  fadder2 \$genblock$ca3-4.v:64$48[3].Y  (
    .a({ add1[12], add1[13] }),
    .b({ add1[14], add1[15] }),
    .ci(a[99]),
    .co(add2[11]),
    .s({ add2[9], add2[10] })
  );
  fadder2 \$genblock$ca3-4.v:64$49[4].Y  (
    .a({ add1[16], add1[17] }),
    .b({ add1[18], add1[19] }),
    .ci(a[100]),
    .co(add2[14]),
    .s({ add2[12], add2[13] })
  );
  fadder2 \$genblock$ca3-4.v:64$50[5].Y  (
    .a({ add1[20], add1[21] }),
    .b({ add1[22], add1[23] }),
    .ci(a[101]),
    .co(add2[17]),
    .s({ add2[15], add2[16] })
  );
  fadder2 \$genblock$ca3-4.v:64$51[6].Y  (
    .a({ add1[24], add1[25] }),
    .b({ add1[26], add1[27] }),
    .ci(a[102]),
    .co(add2[20]),
    .s({ add2[18], add2[19] })
  );
  fadder2 \$genblock$ca3-4.v:64$52[7].Y  (
    .a({ add1[28], add1[29] }),
    .b({ add1[30], add1[31] }),
    .ci(a[103]),
    .co(add2[23]),
    .s({ add2[21], add2[22] })
  );
  fadder2 \$genblock$ca3-4.v:64$53[8].Y  (
    .a({ add1[32], add1[33] }),
    .b({ add1[34], add1[35] }),
    .ci(a[104]),
    .co(add2[26]),
    .s({ add2[24], add2[25] })
  );
  fadder2 \$genblock$ca3-4.v:64$54[9].Y  (
    .a({ add1[36], add1[37] }),
    .b({ add1[38], add1[39] }),
    .ci(a[105]),
    .co(add2[29]),
    .s({ add2[27], add2[28] })
  );
  fadder2 \$genblock$ca3-4.v:64$55[10].Y  (
    .a({ add1[40], add1[41] }),
    .b({ add1[42], add1[43] }),
    .ci(a[106]),
    .co(add2[32]),
    .s({ add2[30], add2[31] })
  );
  fadder2 \$genblock$ca3-4.v:64$56[11].Y  (
    .a({ add1[44], add1[45] }),
    .b({ add1[46], add1[47] }),
    .ci(a[107]),
    .co(add2[35]),
    .s({ add2[33], add2[34] })
  );
  fadder2 \$genblock$ca3-4.v:64$57[12].Y  (
    .a({ add1[48], add1[49] }),
    .b({ add1[50], add1[51] }),
    .ci(a[108]),
    .co(add2[38]),
    .s({ add2[36], add2[37] })
  );
  fadder2 \$genblock$ca3-4.v:64$58[13].Y  (
    .a({ add1[52], add1[53] }),
    .b({ add1[54], add1[55] }),
    .ci(a[109]),
    .co(add2[41]),
    .s({ add2[39], add2[40] })
  );
  fadder2 \$genblock$ca3-4.v:64$59[14].Y  (
    .a({ add1[56], add1[57] }),
    .b({ add1[58], add1[59] }),
    .ci(a[110]),
    .co(add2[44]),
    .s({ add2[42], add2[43] })
  );
  fadder2 \$genblock$ca3-4.v:64$60[15].Y  (
    .a({ add1[60], add1[61] }),
    .b({ add1[62], add1[63] }),
    .ci(a[111]),
    .co(add2[47]),
    .s({ add2[45], add2[46] })
  );
  fadder3 \$genblock$ca3-4.v:72$61[0].Y  (
    .a({ add2[0], add2[1], add2[2] }),
    .b({ add2[3], add2[4], add2[5] }),
    .ci(a[112]),
    .co(add3[3]),
    .s({ add3[0], add3[1], add3[2] })
  );
  fadder3 \$genblock$ca3-4.v:72$62[1].Y  (
    .a({ add2[6], add2[7], add2[8] }),
    .b({ add2[9], add2[10], add2[11] }),
    .ci(a[113]),
    .co(add3[7]),
    .s({ add3[4], add3[5], add3[6] })
  );
  fadder3 \$genblock$ca3-4.v:72$63[2].Y  (
    .a({ add2[12], add2[13], add2[14] }),
    .b({ add2[15], add2[16], add2[17] }),
    .ci(a[114]),
    .co(add3[11]),
    .s({ add3[8], add3[9], add3[10] })
  );
  fadder3 \$genblock$ca3-4.v:72$64[3].Y  (
    .a({ add2[18], add2[19], add2[20] }),
    .b({ add2[21], add2[22], add2[23] }),
    .ci(a[115]),
    .co(add3[15]),
    .s({ add3[12], add3[13], add3[14] })
  );
  fadder3 \$genblock$ca3-4.v:72$65[4].Y  (
    .a({ add2[24], add2[25], add2[26] }),
    .b({ add2[27], add2[28], add2[29] }),
    .ci(a[116]),
    .co(add3[19]),
    .s({ add3[16], add3[17], add3[18] })
  );
  fadder3 \$genblock$ca3-4.v:72$66[5].Y  (
    .a({ add2[30], add2[31], add2[32] }),
    .b({ add2[33], add2[34], add2[35] }),
    .ci(a[117]),
    .co(add3[23]),
    .s({ add3[20], add3[21], add3[22] })
  );
  fadder3 \$genblock$ca3-4.v:72$67[6].Y  (
    .a({ add2[36], add2[37], add2[38] }),
    .b({ add2[39], add2[40], add2[41] }),
    .ci(a[118]),
    .co(add3[27]),
    .s({ add3[24], add3[25], add3[26] })
  );
  fadder3 \$genblock$ca3-4.v:72$68[7].Y  (
    .a({ add2[42], add2[43], add2[44] }),
    .b({ add2[45], add2[46], add2[47] }),
    .ci(a[119]),
    .co(add3[31]),
    .s({ add3[28], add3[29], add3[30] })
  );
  fadder4 \$genblock$ca3-4.v:80$69[0].Y  (
    .a({ add3[0], add3[1], add3[2], add3[3] }),
    .b({ add3[4], add3[5], add3[6], add3[7] }),
    .ci(a[120]),
    .co(add4[4]),
    .s({ add4[0], add4[1], add4[2], add4[3] })
  );
  fadder4 \$genblock$ca3-4.v:80$70[1].Y  (
    .a({ add3[8], add3[9], add3[10], add3[11] }),
    .b({ add3[12], add3[13], add3[14], add3[15] }),
    .ci(a[121]),
    .co(add4[9]),
    .s({ add4[5], add4[6], add4[7], add4[8] })
  );
  fadder4 \$genblock$ca3-4.v:80$71[2].Y  (
    .a({ add3[16], add3[17], add3[18], add3[19] }),
    .b({ add3[20], add3[21], add3[22], add3[23] }),
    .ci(a[122]),
    .co(add4[14]),
    .s({ add4[10], add4[11], add4[12], add4[13] })
  );
  fadder4 \$genblock$ca3-4.v:80$72[3].Y  (
    .a({ add3[24], add3[25], add3[26], add3[27] }),
    .b({ add3[28], add3[29], add3[30], add3[31] }),
    .ci(a[123]),
    .co(add4[19]),
    .s({ add4[15], add4[16], add4[17], add4[18] })
  );
  fadder5 \$genblock$ca3-4.v:90$73[0].Y  (
    .a({ add4[0], add4[1], add4[2], add4[3], add4[4] }),
    .b({ add4[5], add4[6], add4[7], add4[8], add4[9] }),
    .ci(a[124]),
    .co(add5[5]),
    .s({ add5[0], add5[1], add5[2], add5[3], add5[4] })
  );
  fadder5 \$genblock$ca3-4.v:90$74[1].Y  (
    .a({ add4[10], add4[11], add4[12], add4[13], add4[14] }),
    .b({ add4[15], add4[16], add4[17], add4[18], add4[19] }),
    .ci(a[125]),
    .co(add5[11]),
    .s({ add5[6], add5[7], add5[8], add5[9], add5[10] })
  );
  fadder6 Y (
    .a({ add5[0], add5[1], add5[2], add5[3], add5[4], add5[5] }),
    .b({ add5[6], add5[7], add5[8], add5[9], add5[10], add5[11] }),
    .ci(a[126]),
    .co(add6[6]),
    .s({ add6[0], add6[1], add6[2], add6[3], add6[4], add6[5] })
  );
  assign w = add6;
endmodule

module fadder1(a, b, ci, s, co);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  input a;
  input b;
  input ci;
  output co;
  output s;
  NOT _20_ (
    .A(_13_),
    .Y(_15_)
  );
  NOT _21_ (
    .A(_03_),
    .Y(_17_)
  );
  NOT _22_ (
    .A(_04_),
    .Y(_18_)
  );
  NAND _23_ (
    .A(_18_),
    .B(_17_),
    .Y(_19_)
  );
  NAND _24_ (
    .A(_04_),
    .B(_03_),
    .Y(_05_)
  );
  NAND _25_ (
    .A(_05_),
    .B(_19_),
    .Y(_06_)
  );
  NOR _26_ (
    .A(_06_),
    .B(_15_),
    .Y(_07_)
  );
  NOR _27_ (
    .A(_04_),
    .B(_03_),
    .Y(_08_)
  );
  NOR _28_ (
    .A(_18_),
    .B(_17_),
    .Y(_09_)
  );
  NOR _29_ (
    .A(_09_),
    .B(_08_),
    .Y(_10_)
  );
  NOR _30_ (
    .A(_10_),
    .B(_13_),
    .Y(_11_)
  );
  NOR _31_ (
    .A(_11_),
    .B(_07_),
    .Y(_14_)
  );
  NAND _32_ (
    .A(_10_),
    .B(_13_),
    .Y(_12_)
  );
  NAND _33_ (
    .A(_12_),
    .B(_05_),
    .Y(_16_)
  );
  assign _03_ = ci;
  assign _04_ = a;
  assign _13_ = b;
  assign s = _14_;
  assign co = _16_;
endmodule

module fadder2(a, b, ci, s, co);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  input [1:0] a;
  input [1:0] b;
  input ci;
  output co;
  output [1:0] s;
  NOT _35_ (
    .A(_28_),
    .Y(_34_)
  );
  NAND _36_ (
    .A(_06_),
    .B(_05_),
    .Y(_08_)
  );
  NOT _37_ (
    .A(_05_),
    .Y(_09_)
  );
  NOT _38_ (
    .A(_06_),
    .Y(_11_)
  );
  NAND _39_ (
    .A(_11_),
    .B(_09_),
    .Y(_12_)
  );
  NAND _40_ (
    .A(_12_),
    .B(_08_),
    .Y(_13_)
  );
  NOR _41_ (
    .A(_13_),
    .B(_34_),
    .Y(_14_)
  );
  NOR _42_ (
    .A(_11_),
    .B(_09_),
    .Y(_15_)
  );
  NOR _43_ (
    .A(_06_),
    .B(_05_),
    .Y(_16_)
  );
  NOR _44_ (
    .A(_16_),
    .B(_15_),
    .Y(_17_)
  );
  NOR _45_ (
    .A(_17_),
    .B(_28_),
    .Y(_18_)
  );
  NOR _46_ (
    .A(_18_),
    .B(_14_),
    .Y(_31_)
  );
  NOR _47_ (
    .A(_14_),
    .B(_15_),
    .Y(_19_)
  );
  NOR _48_ (
    .A(_33_),
    .B(_32_),
    .Y(_20_)
  );
  NAND _49_ (
    .A(_33_),
    .B(_32_),
    .Y(_21_)
  );
  NOT _50_ (
    .A(_21_),
    .Y(_22_)
  );
  NOR _51_ (
    .A(_22_),
    .B(_20_),
    .Y(_23_)
  );
  NOT _52_ (
    .A(_23_),
    .Y(_24_)
  );
  NOR _53_ (
    .A(_24_),
    .B(_19_),
    .Y(_25_)
  );
  NAND _54_ (
    .A(_17_),
    .B(_28_),
    .Y(_26_)
  );
  NAND _55_ (
    .A(_26_),
    .B(_08_),
    .Y(_27_)
  );
  NOR _56_ (
    .A(_23_),
    .B(_27_),
    .Y(_29_)
  );
  NOR _57_ (
    .A(_29_),
    .B(_25_),
    .Y(_07_)
  );
  NAND _58_ (
    .A(_23_),
    .B(_27_),
    .Y(_30_)
  );
  NAND _59_ (
    .A(_30_),
    .B(_21_),
    .Y(_10_)
  );
  assign _05_ = b[0];
  assign _06_ = a[0];
  assign _28_ = ci;
  assign s[0] = _31_;
  assign _32_ = b[1];
  assign _33_ = a[1];
  assign s[1] = _07_;
  assign co = _10_;
endmodule

module fadder3(a, b, ci, s, co);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  wire _48_;
  wire _49_;
  wire _50_;
  wire _51_;
  wire _52_;
  wire _53_;
  input [2:0] a;
  input [2:0] b;
  input ci;
  output co;
  output [2:0] s;
  NOT _54_ (
    .A(_33_),
    .Y(_13_)
  );
  NOT _55_ (
    .A(_09_),
    .Y(_15_)
  );
  NOT _56_ (
    .A(_10_),
    .Y(_16_)
  );
  NAND _57_ (
    .A(_16_),
    .B(_15_),
    .Y(_17_)
  );
  NAND _58_ (
    .A(_10_),
    .B(_09_),
    .Y(_18_)
  );
  NAND _59_ (
    .A(_18_),
    .B(_17_),
    .Y(_20_)
  );
  NOR _60_ (
    .A(_20_),
    .B(_13_),
    .Y(_21_)
  );
  NOR _61_ (
    .A(_10_),
    .B(_09_),
    .Y(_23_)
  );
  NOR _62_ (
    .A(_16_),
    .B(_15_),
    .Y(_24_)
  );
  NOR _63_ (
    .A(_24_),
    .B(_23_),
    .Y(_25_)
  );
  NOR _64_ (
    .A(_25_),
    .B(_33_),
    .Y(_26_)
  );
  NOR _65_ (
    .A(_26_),
    .B(_21_),
    .Y(_43_)
  );
  NOR _66_ (
    .A(_21_),
    .B(_24_),
    .Y(_27_)
  );
  NOT _67_ (
    .A(_52_),
    .Y(_28_)
  );
  NOT _68_ (
    .A(_53_),
    .Y(_29_)
  );
  NOR _69_ (
    .A(_29_),
    .B(_28_),
    .Y(_30_)
  );
  NOR _70_ (
    .A(_53_),
    .B(_52_),
    .Y(_31_)
  );
  NOR _71_ (
    .A(_31_),
    .B(_30_),
    .Y(_32_)
  );
  NOT _72_ (
    .A(_32_),
    .Y(_34_)
  );
  NOR _73_ (
    .A(_34_),
    .B(_27_),
    .Y(_35_)
  );
  NAND _74_ (
    .A(_25_),
    .B(_33_),
    .Y(_36_)
  );
  NAND _75_ (
    .A(_36_),
    .B(_18_),
    .Y(_37_)
  );
  NOR _76_ (
    .A(_32_),
    .B(_37_),
    .Y(_38_)
  );
  NOR _77_ (
    .A(_38_),
    .B(_35_),
    .Y(_11_)
  );
  NOR _78_ (
    .A(_35_),
    .B(_30_),
    .Y(_39_)
  );
  NOR _79_ (
    .A(_14_),
    .B(_12_),
    .Y(_40_)
  );
  NAND _80_ (
    .A(_14_),
    .B(_12_),
    .Y(_41_)
  );
  NOT _81_ (
    .A(_41_),
    .Y(_42_)
  );
  NOR _82_ (
    .A(_42_),
    .B(_40_),
    .Y(_44_)
  );
  NOT _83_ (
    .A(_44_),
    .Y(_45_)
  );
  NOR _84_ (
    .A(_45_),
    .B(_39_),
    .Y(_46_)
  );
  NOT _85_ (
    .A(_30_),
    .Y(_47_)
  );
  NAND _86_ (
    .A(_32_),
    .B(_37_),
    .Y(_48_)
  );
  NAND _87_ (
    .A(_48_),
    .B(_47_),
    .Y(_49_)
  );
  NOR _88_ (
    .A(_44_),
    .B(_49_),
    .Y(_50_)
  );
  NOR _89_ (
    .A(_50_),
    .B(_46_),
    .Y(_19_)
  );
  NAND _90_ (
    .A(_44_),
    .B(_49_),
    .Y(_51_)
  );
  NAND _91_ (
    .A(_51_),
    .B(_41_),
    .Y(_22_)
  );
  assign _09_ = b[0];
  assign _10_ = a[0];
  assign _33_ = ci;
  assign s[0] = _43_;
  assign _52_ = b[1];
  assign _53_ = a[1];
  assign s[1] = _11_;
  assign _12_ = b[2];
  assign _14_ = a[2];
  assign s[2] = _19_;
  assign co = _22_;
endmodule

module fadder4(a, b, ci, s, co);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  input [3:0] a;
  input [3:0] b;
  input ci;
  output co;
  output [3:0] s;
  NOT _073_ (
    .A(_039_),
    .Y(_020_)
  );
  NAND _074_ (
    .A(_016_),
    .B(_015_),
    .Y(_022_)
  );
  NOT _075_ (
    .A(_015_),
    .Y(_024_)
  );
  NOT _076_ (
    .A(_016_),
    .Y(_026_)
  );
  NAND _077_ (
    .A(_026_),
    .B(_024_),
    .Y(_027_)
  );
  NAND _078_ (
    .A(_027_),
    .B(_022_),
    .Y(_028_)
  );
  NOR _079_ (
    .A(_028_),
    .B(_020_),
    .Y(_029_)
  );
  NOR _080_ (
    .A(_026_),
    .B(_024_),
    .Y(_031_)
  );
  NOR _081_ (
    .A(_016_),
    .B(_015_),
    .Y(_032_)
  );
  NOR _082_ (
    .A(_032_),
    .B(_031_),
    .Y(_033_)
  );
  NOR _083_ (
    .A(_033_),
    .B(_039_),
    .Y(_034_)
  );
  NOR _084_ (
    .A(_034_),
    .B(_029_),
    .Y(_049_)
  );
  NOR _085_ (
    .A(_029_),
    .B(_031_),
    .Y(_035_)
  );
  NOR _086_ (
    .A(_070_),
    .B(_059_),
    .Y(_037_)
  );
  NAND _087_ (
    .A(_070_),
    .B(_059_),
    .Y(_038_)
  );
  NOT _088_ (
    .A(_038_),
    .Y(_040_)
  );
  NOR _089_ (
    .A(_040_),
    .B(_037_),
    .Y(_041_)
  );
  NOT _090_ (
    .A(_041_),
    .Y(_042_)
  );
  NOR _091_ (
    .A(_042_),
    .B(_035_),
    .Y(_043_)
  );
  NAND _092_ (
    .A(_033_),
    .B(_039_),
    .Y(_044_)
  );
  NAND _093_ (
    .A(_044_),
    .B(_022_),
    .Y(_045_)
  );
  NOR _094_ (
    .A(_041_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _095_ (
    .A(_046_),
    .B(_043_),
    .Y(_017_)
  );
  NOR _096_ (
    .A(_043_),
    .B(_040_),
    .Y(_047_)
  );
  NAND _097_ (
    .A(_019_),
    .B(_018_),
    .Y(_048_)
  );
  NOT _098_ (
    .A(_048_),
    .Y(_050_)
  );
  NOR _099_ (
    .A(_019_),
    .B(_018_),
    .Y(_051_)
  );
  NOR _100_ (
    .A(_051_),
    .B(_050_),
    .Y(_052_)
  );
  NOT _101_ (
    .A(_052_),
    .Y(_053_)
  );
  NOR _102_ (
    .A(_053_),
    .B(_047_),
    .Y(_054_)
  );
  NAND _103_ (
    .A(_041_),
    .B(_045_),
    .Y(_055_)
  );
  NAND _104_ (
    .A(_055_),
    .B(_038_),
    .Y(_056_)
  );
  NOR _105_ (
    .A(_052_),
    .B(_056_),
    .Y(_057_)
  );
  NOR _106_ (
    .A(_057_),
    .B(_054_),
    .Y(_021_)
  );
  NOR _107_ (
    .A(_054_),
    .B(_050_),
    .Y(_058_)
  );
  NOT _108_ (
    .A(_023_),
    .Y(_060_)
  );
  NOT _109_ (
    .A(_025_),
    .Y(_061_)
  );
  NOR _110_ (
    .A(_061_),
    .B(_060_),
    .Y(_062_)
  );
  NOR _111_ (
    .A(_025_),
    .B(_023_),
    .Y(_063_)
  );
  NOR _112_ (
    .A(_063_),
    .B(_062_),
    .Y(_064_)
  );
  NOT _113_ (
    .A(_064_),
    .Y(_065_)
  );
  NOR _114_ (
    .A(_065_),
    .B(_058_),
    .Y(_066_)
  );
  NAND _115_ (
    .A(_052_),
    .B(_056_),
    .Y(_067_)
  );
  NAND _116_ (
    .A(_067_),
    .B(_048_),
    .Y(_068_)
  );
  NOR _117_ (
    .A(_064_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _118_ (
    .A(_069_),
    .B(_066_),
    .Y(_030_)
  );
  NOT _119_ (
    .A(_062_),
    .Y(_071_)
  );
  NAND _120_ (
    .A(_064_),
    .B(_068_),
    .Y(_072_)
  );
  NAND _121_ (
    .A(_072_),
    .B(_071_),
    .Y(_036_)
  );
  assign _015_ = b[0];
  assign _016_ = a[0];
  assign _039_ = ci;
  assign s[0] = _049_;
  assign _059_ = b[1];
  assign _070_ = a[1];
  assign s[1] = _017_;
  assign _018_ = b[2];
  assign _019_ = a[2];
  assign s[2] = _021_;
  assign _023_ = b[3];
  assign _025_ = a[3];
  assign s[3] = _030_;
  assign co = _036_;
endmodule

module fadder5(a, b, ci, s, co);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  input [4:0] a;
  input [4:0] b;
  input ci;
  output co;
  output [4:0] s;
  NOT _088_ (
    .A(_040_),
    .Y(_026_)
  );
  NAND _089_ (
    .A(_019_),
    .B(_018_),
    .Y(_027_)
  );
  NOT _090_ (
    .A(_018_),
    .Y(_028_)
  );
  NOT _091_ (
    .A(_019_),
    .Y(_029_)
  );
  NAND _092_ (
    .A(_029_),
    .B(_028_),
    .Y(_030_)
  );
  NAND _093_ (
    .A(_030_),
    .B(_027_),
    .Y(_031_)
  );
  NOR _094_ (
    .A(_031_),
    .B(_026_),
    .Y(_033_)
  );
  NOR _095_ (
    .A(_029_),
    .B(_028_),
    .Y(_035_)
  );
  NOR _096_ (
    .A(_019_),
    .B(_018_),
    .Y(_037_)
  );
  NOR _097_ (
    .A(_037_),
    .B(_035_),
    .Y(_038_)
  );
  NOR _098_ (
    .A(_038_),
    .B(_040_),
    .Y(_039_)
  );
  NOR _099_ (
    .A(_039_),
    .B(_033_),
    .Y(_053_)
  );
  NOR _100_ (
    .A(_033_),
    .B(_035_),
    .Y(_041_)
  );
  NOR _101_ (
    .A(_073_),
    .B(_063_),
    .Y(_042_)
  );
  NAND _102_ (
    .A(_073_),
    .B(_063_),
    .Y(_044_)
  );
  NOT _103_ (
    .A(_044_),
    .Y(_045_)
  );
  NOR _104_ (
    .A(_045_),
    .B(_042_),
    .Y(_047_)
  );
  NOT _105_ (
    .A(_047_),
    .Y(_048_)
  );
  NOR _106_ (
    .A(_048_),
    .B(_041_),
    .Y(_049_)
  );
  NAND _107_ (
    .A(_038_),
    .B(_040_),
    .Y(_050_)
  );
  NAND _108_ (
    .A(_050_),
    .B(_027_),
    .Y(_051_)
  );
  NOR _109_ (
    .A(_047_),
    .B(_051_),
    .Y(_052_)
  );
  NOR _110_ (
    .A(_052_),
    .B(_049_),
    .Y(_020_)
  );
  NOR _111_ (
    .A(_049_),
    .B(_045_),
    .Y(_054_)
  );
  NOR _112_ (
    .A(_022_),
    .B(_021_),
    .Y(_055_)
  );
  NAND _113_ (
    .A(_022_),
    .B(_021_),
    .Y(_056_)
  );
  NOT _114_ (
    .A(_056_),
    .Y(_057_)
  );
  NOR _115_ (
    .A(_057_),
    .B(_055_),
    .Y(_058_)
  );
  NOT _116_ (
    .A(_058_),
    .Y(_059_)
  );
  NOR _117_ (
    .A(_059_),
    .B(_054_),
    .Y(_060_)
  );
  NAND _118_ (
    .A(_047_),
    .B(_051_),
    .Y(_061_)
  );
  NAND _119_ (
    .A(_061_),
    .B(_044_),
    .Y(_062_)
  );
  NOR _120_ (
    .A(_058_),
    .B(_062_),
    .Y(_064_)
  );
  NOR _121_ (
    .A(_064_),
    .B(_060_),
    .Y(_023_)
  );
  NOR _122_ (
    .A(_060_),
    .B(_057_),
    .Y(_065_)
  );
  NOR _123_ (
    .A(_025_),
    .B(_024_),
    .Y(_066_)
  );
  NAND _124_ (
    .A(_025_),
    .B(_024_),
    .Y(_067_)
  );
  NOT _125_ (
    .A(_067_),
    .Y(_068_)
  );
  NOR _126_ (
    .A(_068_),
    .B(_066_),
    .Y(_069_)
  );
  NAND _127_ (
    .A(_069_),
    .B(_065_),
    .Y(_070_)
  );
  NAND _128_ (
    .A(_058_),
    .B(_062_),
    .Y(_071_)
  );
  NAND _129_ (
    .A(_071_),
    .B(_056_),
    .Y(_072_)
  );
  NOT _130_ (
    .A(_069_),
    .Y(_074_)
  );
  NAND _131_ (
    .A(_074_),
    .B(_072_),
    .Y(_075_)
  );
  NAND _132_ (
    .A(_075_),
    .B(_070_),
    .Y(_032_)
  );
  NOR _133_ (
    .A(_036_),
    .B(_034_),
    .Y(_076_)
  );
  NAND _134_ (
    .A(_036_),
    .B(_034_),
    .Y(_077_)
  );
  NOT _135_ (
    .A(_077_),
    .Y(_078_)
  );
  NOR _136_ (
    .A(_078_),
    .B(_076_),
    .Y(_079_)
  );
  NOT _137_ (
    .A(_079_),
    .Y(_080_)
  );
  NOR _138_ (
    .A(_066_),
    .B(_065_),
    .Y(_081_)
  );
  NOR _139_ (
    .A(_081_),
    .B(_068_),
    .Y(_082_)
  );
  NOR _140_ (
    .A(_082_),
    .B(_080_),
    .Y(_083_)
  );
  NOR _141_ (
    .A(_068_),
    .B(_072_),
    .Y(_084_)
  );
  NOR _142_ (
    .A(_084_),
    .B(_066_),
    .Y(_085_)
  );
  NOR _143_ (
    .A(_085_),
    .B(_079_),
    .Y(_086_)
  );
  NOR _144_ (
    .A(_086_),
    .B(_083_),
    .Y(_043_)
  );
  NAND _145_ (
    .A(_085_),
    .B(_079_),
    .Y(_087_)
  );
  NAND _146_ (
    .A(_087_),
    .B(_077_),
    .Y(_046_)
  );
  assign _018_ = b[0];
  assign _019_ = a[0];
  assign _040_ = ci;
  assign s[0] = _053_;
  assign _063_ = b[1];
  assign _073_ = a[1];
  assign s[1] = _020_;
  assign _021_ = b[2];
  assign _022_ = a[2];
  assign s[2] = _023_;
  assign _024_ = b[3];
  assign _025_ = a[3];
  assign s[3] = _032_;
  assign _034_ = b[4];
  assign _036_ = a[4];
  assign s[4] = _043_;
  assign co = _046_;
endmodule

module fadder6(a, b, ci, s, co);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  input [5:0] a;
  input [5:0] b;
  input ci;
  output co;
  output [5:0] s;
  NOT _114_ (
    .A(_045_),
    .Y(_033_)
  );
  NOT _115_ (
    .A(_025_),
    .Y(_034_)
  );
  NOT _116_ (
    .A(_026_),
    .Y(_035_)
  );
  NAND _117_ (
    .A(_035_),
    .B(_034_),
    .Y(_037_)
  );
  NAND _118_ (
    .A(_026_),
    .B(_025_),
    .Y(_039_)
  );
  NAND _119_ (
    .A(_039_),
    .B(_037_),
    .Y(_041_)
  );
  NOR _120_ (
    .A(_041_),
    .B(_033_),
    .Y(_042_)
  );
  NOR _121_ (
    .A(_026_),
    .B(_025_),
    .Y(_043_)
  );
  NOR _122_ (
    .A(_035_),
    .B(_034_),
    .Y(_044_)
  );
  NOR _123_ (
    .A(_044_),
    .B(_043_),
    .Y(_046_)
  );
  NOR _124_ (
    .A(_046_),
    .B(_045_),
    .Y(_047_)
  );
  NOR _125_ (
    .A(_047_),
    .B(_042_),
    .Y(_059_)
  );
  NOR _126_ (
    .A(_042_),
    .B(_044_),
    .Y(_050_)
  );
  NOT _127_ (
    .A(_070_),
    .Y(_052_)
  );
  NOT _128_ (
    .A(_080_),
    .Y(_053_)
  );
  NOR _129_ (
    .A(_053_),
    .B(_052_),
    .Y(_054_)
  );
  NOR _130_ (
    .A(_080_),
    .B(_070_),
    .Y(_055_)
  );
  NOR _131_ (
    .A(_055_),
    .B(_054_),
    .Y(_057_)
  );
  NOT _132_ (
    .A(_057_),
    .Y(_058_)
  );
  NOR _133_ (
    .A(_058_),
    .B(_050_),
    .Y(_060_)
  );
  NAND _134_ (
    .A(_046_),
    .B(_045_),
    .Y(_061_)
  );
  NAND _135_ (
    .A(_061_),
    .B(_039_),
    .Y(_062_)
  );
  NOR _136_ (
    .A(_057_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _137_ (
    .A(_063_),
    .B(_060_),
    .Y(_027_)
  );
  NOR _138_ (
    .A(_060_),
    .B(_054_),
    .Y(_065_)
  );
  NAND _139_ (
    .A(_029_),
    .B(_028_),
    .Y(_066_)
  );
  NOT _140_ (
    .A(_066_),
    .Y(_067_)
  );
  NOR _141_ (
    .A(_029_),
    .B(_028_),
    .Y(_068_)
  );
  NOR _142_ (
    .A(_068_),
    .B(_067_),
    .Y(_069_)
  );
  NOT _143_ (
    .A(_069_),
    .Y(_071_)
  );
  NOR _144_ (
    .A(_071_),
    .B(_065_),
    .Y(_072_)
  );
  NOT _145_ (
    .A(_054_),
    .Y(_073_)
  );
  NAND _146_ (
    .A(_057_),
    .B(_062_),
    .Y(_074_)
  );
  NAND _147_ (
    .A(_074_),
    .B(_073_),
    .Y(_075_)
  );
  NOR _148_ (
    .A(_069_),
    .B(_075_),
    .Y(_076_)
  );
  NOR _149_ (
    .A(_076_),
    .B(_072_),
    .Y(_030_)
  );
  NOR _150_ (
    .A(_072_),
    .B(_067_),
    .Y(_077_)
  );
  NOR _151_ (
    .A(_032_),
    .B(_031_),
    .Y(_078_)
  );
  NAND _152_ (
    .A(_032_),
    .B(_031_),
    .Y(_079_)
  );
  NOT _153_ (
    .A(_079_),
    .Y(_081_)
  );
  NOR _154_ (
    .A(_081_),
    .B(_078_),
    .Y(_082_)
  );
  NAND _155_ (
    .A(_082_),
    .B(_077_),
    .Y(_083_)
  );
  NAND _156_ (
    .A(_069_),
    .B(_075_),
    .Y(_084_)
  );
  NAND _157_ (
    .A(_084_),
    .B(_066_),
    .Y(_085_)
  );
  NOT _158_ (
    .A(_082_),
    .Y(_086_)
  );
  NAND _159_ (
    .A(_086_),
    .B(_085_),
    .Y(_087_)
  );
  NAND _160_ (
    .A(_087_),
    .B(_083_),
    .Y(_036_)
  );
  NOT _161_ (
    .A(_038_),
    .Y(_088_)
  );
  NOT _162_ (
    .A(_040_),
    .Y(_089_)
  );
  NOR _163_ (
    .A(_089_),
    .B(_088_),
    .Y(_090_)
  );
  NOR _164_ (
    .A(_040_),
    .B(_038_),
    .Y(_091_)
  );
  NOR _165_ (
    .A(_091_),
    .B(_090_),
    .Y(_092_)
  );
  NOT _166_ (
    .A(_092_),
    .Y(_093_)
  );
  NOR _167_ (
    .A(_078_),
    .B(_077_),
    .Y(_094_)
  );
  NOR _168_ (
    .A(_094_),
    .B(_081_),
    .Y(_095_)
  );
  NOR _169_ (
    .A(_095_),
    .B(_093_),
    .Y(_096_)
  );
  NOR _170_ (
    .A(_081_),
    .B(_085_),
    .Y(_097_)
  );
  NOR _171_ (
    .A(_097_),
    .B(_078_),
    .Y(_098_)
  );
  NOR _172_ (
    .A(_098_),
    .B(_092_),
    .Y(_099_)
  );
  NOR _173_ (
    .A(_099_),
    .B(_096_),
    .Y(_048_)
  );
  NOR _174_ (
    .A(_096_),
    .B(_090_),
    .Y(_100_)
  );
  NOT _175_ (
    .A(_049_),
    .Y(_101_)
  );
  NOT _176_ (
    .A(_051_),
    .Y(_102_)
  );
  NOR _177_ (
    .A(_102_),
    .B(_101_),
    .Y(_103_)
  );
  NOR _178_ (
    .A(_051_),
    .B(_049_),
    .Y(_104_)
  );
  NOR _179_ (
    .A(_104_),
    .B(_103_),
    .Y(_105_)
  );
  NOT _180_ (
    .A(_105_),
    .Y(_106_)
  );
  NOR _181_ (
    .A(_106_),
    .B(_100_),
    .Y(_107_)
  );
  NOT _182_ (
    .A(_090_),
    .Y(_108_)
  );
  NAND _183_ (
    .A(_098_),
    .B(_092_),
    .Y(_109_)
  );
  NAND _184_ (
    .A(_109_),
    .B(_108_),
    .Y(_110_)
  );
  NOR _185_ (
    .A(_105_),
    .B(_110_),
    .Y(_111_)
  );
  NOR _186_ (
    .A(_111_),
    .B(_107_),
    .Y(_056_)
  );
  NOT _187_ (
    .A(_103_),
    .Y(_112_)
  );
  NAND _188_ (
    .A(_105_),
    .B(_110_),
    .Y(_113_)
  );
  NAND _189_ (
    .A(_113_),
    .B(_112_),
    .Y(_064_)
  );
  assign _025_ = b[0];
  assign _026_ = a[0];
  assign _045_ = ci;
  assign s[0] = _059_;
  assign _070_ = b[1];
  assign _080_ = a[1];
  assign s[1] = _027_;
  assign _028_ = b[2];
  assign _029_ = a[2];
  assign s[2] = _030_;
  assign _031_ = b[3];
  assign _032_ = a[3];
  assign s[3] = _036_;
  assign _038_ = b[4];
  assign _040_ = a[4];
  assign s[4] = _048_;
  assign _049_ = b[5];
  assign _051_ = a[5];
  assign s[5] = _056_;
  assign co = _064_;
endmodule
